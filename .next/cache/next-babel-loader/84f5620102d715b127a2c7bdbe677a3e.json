{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\adewale-wedding-invite\\\\pages\\\\pictureGrid.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { Blurhash } from 'react-blurhash';\nconst PicturesGrid = () => {\n  const pictures = ['/assets/images/pic (1).jpg', '/assets/images/pic (2).jpg', '/assets/images/pic (3).jpg', '/assets/images/pic (4).jpg', '/assets/images/pic (5).jpg', '/assets/images/pic (6).jpg', '/assets/images/pic (7).jpg', '/assets/images/pic (8).jpg', '/assets/images/pic (9).jpg', '/assets/images/pic (10).jpg', '/assets/images/pic (11).jpg', '/assets/images/pic (12).jpg', '/assets/images/pic (13).jpg'];\n  const {\n    0: selectedPicture,\n    1: setSelectedPicture\n  } = useState(null);\n  const {\n    0: imageLoaded,\n    1: setImageLoaded\n  } = useState(false);\n  const handleSelectPicture = picture => {\n    setSelectedPicture(picture);\n  };\n  // useEffect(() => {\n  //   const img = new Image();\n  //   img.onload = () => {\n  //     setImageLoaded(true);\n  //   };\n  //   img.src = pictures;\n  // }, [pictures]);\n\n  useEffect(() => {\n    const loadImages = async () => {\n      try {\n        const promises = pictures.map(picture => {\n          return new Promise((resolve, reject) => {\n            const img = new Image();\n            img.onload = () => resolve();\n            img.onerror = () => reject();\n            img.src = picture;\n          });\n        });\n        await Promise.all(promises);\n        setImageLoaded(true);\n      } catch (error) {\n        console.error('Error loading images:', error);\n      }\n    };\n    loadImages();\n  }, [pictures]);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"picture-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, pictures.map((picture, index) => __jsx(React.Fragment, null, __jsx(\"div\", {\n    title: \"view image\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#myModal\",\n    onClick: () => handleSelectPicture(picture),\n    className: \"picture\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: imageLoaded ? 'none' : 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, __jsx(Blurhash, {\n    hash: \"LkOyeVE0R*WC?wWAjZofM{s:RjoM\",\n    className: \"grid-img\",\n    width: '100%',\n    height: '300px',\n    resolutionX: 32,\n    resolutionY: 32,\n    punch: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: !imageLoaded ? 'none' : 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, __jsx(LazyLoadImage, {\n    src: picture,\n    className: \"grid-img\",\n    effect: \"blur\",\n    width: '100%',\n    alt: `Picture ${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  })))))), __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"modal fade\",\n    id: \"myModal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    style: {\n      height: '70%',\n      objectFit: 'cover'\n    },\n    src: selectedPicture,\n    alt: \"selected picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })))))));\n};\nexport default PicturesGrid;","map":{"version":3,"names":["React","useEffect","useState","LazyLoadImage","Blurhash","PicturesGrid","pictures","selectedPicture","setSelectedPicture","imageLoaded","setImageLoaded","handleSelectPicture","picture","loadImages","promises","map","Promise","resolve","reject","img","Image","onload","onerror","src","all","error","console","__jsx","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","index","title","onClick","key","style","display","hash","width","height","resolutionX","resolutionY","punch","effect","alt","id","objectFit"],"sources":["C:/Users/USER/Documents/adewale-wedding-invite/pages/pictureGrid.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { Blurhash } from 'react-blurhash';\r\nconst PicturesGrid = () => {\r\n  const pictures = [\r\n    '/assets/images/pic (1).jpg',\r\n    '/assets/images/pic (2).jpg',\r\n    '/assets/images/pic (3).jpg',\r\n    '/assets/images/pic (4).jpg',\r\n    '/assets/images/pic (5).jpg',\r\n    '/assets/images/pic (6).jpg',\r\n    '/assets/images/pic (7).jpg',\r\n    '/assets/images/pic (8).jpg',\r\n    '/assets/images/pic (9).jpg',\r\n    '/assets/images/pic (10).jpg',\r\n    '/assets/images/pic (11).jpg',\r\n    '/assets/images/pic (12).jpg',\r\n    '/assets/images/pic (13).jpg',\r\n  ];\r\n  const [selectedPicture, setSelectedPicture] = useState(null);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const handleSelectPicture = (picture) => {\r\n    setSelectedPicture(picture);\r\n  };\r\n  // useEffect(() => {\r\n  //   const img = new Image();\r\n  //   img.onload = () => {\r\n  //     setImageLoaded(true);\r\n  //   };\r\n  //   img.src = pictures;\r\n  // }, [pictures]);\r\n\r\n  useEffect(() => {\r\n    const loadImages = async () => {\r\n      try {\r\n        const promises = pictures.map((picture) => {\r\n          return new Promise((resolve, reject) => {\r\n            const img = new Image();\r\n            img.onload = () => resolve();\r\n            img.onerror = () => reject();\r\n            img.src = picture;\r\n          });\r\n        });\r\n\r\n        await Promise.all(promises);\r\n        setImageLoaded(true);\r\n      } catch (error) {\r\n        console.error('Error loading images:', error);\r\n      }\r\n    };\r\n\r\n    loadImages();\r\n  }, [pictures]);\r\n  return (\r\n    <>\r\n      <div className='picture-grid'>\r\n        {pictures.map((picture, index) => (\r\n          <>\r\n            <div\r\n              title='view image'\r\n              data-toggle='modal'\r\n              data-target='#myModal'\r\n              onClick={() => handleSelectPicture(picture)}\r\n              className='picture'\r\n              key={index}\r\n            >\r\n              <div style={{ display: imageLoaded ? 'none' : 'inline' }}>\r\n                <Blurhash\r\n                  hash='LkOyeVE0R*WC?wWAjZofM{s:RjoM'\r\n                  className='grid-img'\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                  resolutionX={32}\r\n                  resolutionY={32}\r\n                  punch={1}\r\n                />\r\n              </div>\r\n              <div style={{ display: !imageLoaded ? 'none' : 'inline' }}>\r\n                <LazyLoadImage\r\n                  src={picture}\r\n                  className='grid-img'\r\n                  effect='blur'\r\n                  width={'100%'}\r\n                  alt={`Picture ${index + 1}`}\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        ))}\r\n      </div>\r\n\r\n      {/* {selectedPicture && showModal && ( */}\r\n      <>\r\n        {/* <div>\r\n            <img src={selectedPicture} alt='selected picture' />\r\n          </div> */}\r\n        <div className='modal fade' id='myModal'>\r\n          <div className='modal-dialog'>\r\n            <div className='modal-content'>\r\n              <div className='modal-body'>\r\n                <img\r\n                  style={{\r\n                    height: '70%',\r\n                    objectFit: 'cover',\r\n                  }}\r\n                  src={selectedPicture}\r\n                  alt='selected picture'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PicturesGrid;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}