{"ast":null,"code":"const fallbackHost = \"http://localhost:3000\";\nexport default ((path, headers) => {\n  if (path.startsWith(\"http\")) {\n    return path;\n  } // Use browser's `window` if headers is not provided\n\n\n  if (!headers && false) {\n    if (true) {\n      throw new Error(\"could not resolve path without request headers: window is undefined\");\n    }\n\n    const {\n      protocol,\n      host\n    } = window.location;\n    return `${protocol}//${host}${path}`;\n  }\n\n  const host = headers ? headers[\"x-now-deployment-url\"] || headers[\"x-forwarded-host\"] || headers.host : null;\n  const scheme = headers && headers[\"x-forwarded-proto\"] ? headers[\"x-forwarded-proto\"] : \"http\";\n  return host ? `${scheme}://${host}${path}` : `${fallbackHost}${path}`;\n});","map":{"version":3,"sources":["C:/Users/USER/Documents/adewale-wedding-invite/src/utils/resolvePath.js"],"names":["fallbackHost","path","headers","startsWith","Error","protocol","host","window","location","scheme"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAArB;AAEA,gBAAe,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAChC,MAAID,IAAI,CAACE,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AAC3B,WAAOF,IAAP;AACD,GAH+B,CAKhC;;;AACA,MAAI,CAACC,OAAD,SAAJ,EAAiC;AAC/B,cAAmC;AACjC,YAAM,IAAIE,KAAJ,CACJ,qEADI,CAAN;AAGD;;AACD,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAqBC,MAAM,CAACC,QAAlC;AACA,WAAQ,GAAEH,QAAS,KAAIC,IAAK,GAAEL,IAAK,EAAnC;AACD;;AACD,QAAMK,IAAI,GAAGJ,OAAO,GAChBA,OAAO,CAAC,sBAAD,CAAP,IACAA,OAAO,CAAC,kBAAD,CADP,IAEAA,OAAO,CAACI,IAHQ,GAIhB,IAJJ;AAKA,QAAMG,MAAM,GACVP,OAAO,IAAIA,OAAO,CAAC,mBAAD,CAAlB,GACIA,OAAO,CAAC,mBAAD,CADX,GAEI,MAHN;AAIA,SAAOI,IAAI,GAAI,GAAEG,MAAO,MAAKH,IAAK,GAAEL,IAAK,EAA9B,GAAmC,GAAED,YAAa,GAAEC,IAAK,EAApE;AACD,CAzBD","sourcesContent":["const fallbackHost = \"http://localhost:3000\";\n\nexport default (path, headers) => {\n  if (path.startsWith(\"http\")) {\n    return path;\n  }\n\n  // Use browser's `window` if headers is not provided\n  if (!headers && process.browser) {\n    if (typeof window === \"undefined\") {\n      throw new Error(\n        \"could not resolve path without request headers: window is undefined\"\n      );\n    }\n    const { protocol, host } = window.location;\n    return `${protocol}//${host}${path}`;\n  }\n  const host = headers\n    ? headers[\"x-now-deployment-url\"] ||\n      headers[\"x-forwarded-host\"] ||\n      headers.host\n    : null;\n  const scheme =\n    headers && headers[\"x-forwarded-proto\"]\n      ? headers[\"x-forwarded-proto\"]\n      : \"http\";\n  return host ? `${scheme}://${host}${path}` : `${fallbackHost}${path}`;\n};\n"]},"metadata":{},"sourceType":"module"}