{"ast":null,"code":"const fallbackHost = \"http://localhost:3000\";\nexport default ((path, headers) => {\n  if (path.startsWith(\"http\")) {\n    return path;\n  }\n\n  // Use browser's `window` if headers is not provided\n  if (!headers && false) {\n    if (true) {\n      throw new Error(\"could not resolve path without request headers: window is undefined\");\n    }\n    const {\n      protocol,\n      host\n    } = window.location;\n    return `${protocol}//${host}${path}`;\n  }\n  const host = headers ? headers[\"x-now-deployment-url\"] || headers[\"x-forwarded-host\"] || headers.host : null;\n  const scheme = headers && headers[\"x-forwarded-proto\"] ? headers[\"x-forwarded-proto\"] : \"http\";\n  return host ? `${scheme}://${host}${path}` : `${fallbackHost}${path}`;\n});","map":null,"metadata":{},"sourceType":"module"}