{"ast":null,"code":"var fallbackHost = \"http://localhost:3000\";\nexport default (function (path, headers) {\n  if (path.startsWith(\"http\")) {\n    return path;\n  } // Use browser's `window` if headers is not provided\n\n\n  if (!headers && true) {\n    if (false) {\n      throw new Error(\"could not resolve path without request headers: window is undefined\");\n    }\n\n    var _window$location = window.location,\n        protocol = _window$location.protocol,\n        _host = _window$location.host;\n    return \"\".concat(protocol, \"//\").concat(_host).concat(path);\n  }\n\n  var host = headers ? headers[\"x-now-deployment-url\"] || headers[\"x-forwarded-host\"] || headers.host : null;\n  var scheme = headers && headers[\"x-forwarded-proto\"] ? headers[\"x-forwarded-proto\"] : \"http\";\n  return host ? \"\".concat(scheme, \"://\").concat(host).concat(path) : \"\".concat(fallbackHost).concat(path);\n});","map":{"version":3,"sources":["C:/Users/USER/Documents/nextjs-wedding-invite/src/utils/resolvePath.js"],"names":["fallbackHost","path","headers","startsWith","Error","window","location","protocol","host","scheme"],"mappings":"AAAA,IAAMA,YAAY,GAAG,uBAArB;AAEA,gBAAe,UAACC,IAAD,EAAOC,OAAP,EAAmB;AAChC,MAAID,IAAI,CAACE,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AAC3B,WAAOF,IAAP;AACD,GAH+B,CAKhC;;;AACA,MAAI,CAACC,OAAD,QAAJ,EAAiC;AAC/B,eAAmC;AACjC,YAAM,IAAIE,KAAJ,CACJ,qEADI,CAAN;AAGD;;AAL8B,2BAMJC,MAAM,CAACC,QANH;AAAA,QAMvBC,QANuB,oBAMvBA,QANuB;AAAA,QAMbC,KANa,oBAMbA,IANa;AAO/B,qBAAUD,QAAV,eAAuBC,KAAvB,SAA8BP,IAA9B;AACD;;AACD,MAAMO,IAAI,GAAGN,OAAO,GAChBA,OAAO,CAAC,sBAAD,CAAP,IACAA,OAAO,CAAC,kBAAD,CADP,IAEAA,OAAO,CAACM,IAHQ,GAIhB,IAJJ;AAKA,MAAMC,MAAM,GACVP,OAAO,IAAIA,OAAO,CAAC,mBAAD,CAAlB,GACIA,OAAO,CAAC,mBAAD,CADX,GAEI,MAHN;AAIA,SAAOM,IAAI,aAAMC,MAAN,gBAAkBD,IAAlB,SAAyBP,IAAzB,cAAqCD,YAArC,SAAoDC,IAApD,CAAX;AACD,CAzBD","sourcesContent":["const fallbackHost = \"http://localhost:3000\";\n\nexport default (path, headers) => {\n  if (path.startsWith(\"http\")) {\n    return path;\n  }\n\n  // Use browser's `window` if headers is not provided\n  if (!headers && process.browser) {\n    if (typeof window === \"undefined\") {\n      throw new Error(\n        \"could not resolve path without request headers: window is undefined\"\n      );\n    }\n    const { protocol, host } = window.location;\n    return `${protocol}//${host}${path}`;\n  }\n  const host = headers\n    ? headers[\"x-now-deployment-url\"] ||\n      headers[\"x-forwarded-host\"] ||\n      headers.host\n    : null;\n  const scheme =\n    headers && headers[\"x-forwarded-proto\"]\n      ? headers[\"x-forwarded-proto\"]\n      : \"http\";\n  return host ? `${scheme}://${host}${path}` : `${fallbackHost}${path}`;\n};\n"]},"metadata":{},"sourceType":"module"}