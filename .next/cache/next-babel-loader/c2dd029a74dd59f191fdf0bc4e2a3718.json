{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport I18n from \"i18n-js\";\nimport en from \"./lang/en\";\nimport id from \"./lang/id\";\nconst supportedLanguages = [{\n  code: \"en\",\n  label: \"English\",\n  translations: en\n}, {\n  code: \"id\",\n  label: \"Indonesia\",\n  translations: id\n}];\nI18n.defaultLocale = \"en\";\nsupportedLanguages.forEach(lang => {\n  I18n.translations[lang.code] = lang.translations;\n});\nexport const languageOptions = supportedLanguages.map(lang => ({\n  value: lang.code,\n  label: lang.label\n}));\nexport const setLocale = locale => {\n  I18n.locale = locale;\n};\nexport const t = (name, params = {}) => {\n  return I18n.t(name, params);\n};\nexport const Trans = props => __jsx(\"span\", {\n  dangerouslySetInnerHTML: {\n    __html: t(props.i18nKey, _objectSpread({}, props))\n  }\n});\nexport const defaultLocale = I18n.defaultLocale;\nexport const useTranslation = locale => {\n  I18n.locale = locale;\n  return I18n.t;\n};","map":null,"metadata":{},"sourceType":"module"}